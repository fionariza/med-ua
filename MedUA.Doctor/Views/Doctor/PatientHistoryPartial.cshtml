@using MedUA.Helpers
@model IEnumerable<MedUA.Models.EntryHistoryViewModel>
@foreach (var item in Model)
{
    <div class="entry-group">
        @Html.PatientHistory(Html.LabelFor(model => item.TimeStamp), mvcHtmlString: Html.DisplayFor(model => item.TimeStamp))
        @Html.PatientHistory(Html.LabelFor(model => item.Complains), mvcHtmlString: Html.DisplayFor(model => item.Complains))
        @Html.PatientHistory(Html.LabelFor(model => item.Examination), mvcHtmlString: Html.DisplayFor(model => item.Examination))
        @if (item.ResearchIds != null && item.ResearchIds.Any())
        {
            @Html.PatientHistory(@Html.LabelFor(model => item.ResearchIds), mvcHtmlString: new MvcHtmlString(item.ResearchIds.Aggregate((research1, research2) => $"{research1},{research2}")))
        }
        @Html.PatientHistory(@Html.LabelFor(model => item.Recomendations), mvcHtmlString: Html.DisplayFor(modelItem => item.Recomendations))

        @if (!string.IsNullOrEmpty(item.Diagnosis))
        {
            @Html.PatientHistory(@Html.LabelFor(model => item.Diagnosis), mvcHtmlString: Html.DisplayFor(modelItem => item.Diagnosis))
        }
        @Html.PatientHistory(@Html.LabelFor(model => item.DoctorSign), mvcHtmlString: @Html.ActionLink(item.DoctorSign, "DoctorProfile", new { doctorId = item.DoctorId }))
    </div>
}